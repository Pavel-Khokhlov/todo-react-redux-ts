{"version":3,"sources":["todosSlice.ts","store.ts","components/Todo/Todo.tsx","components/ListTodos/ListTodos.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["todosSlice","createSlice","name","initialState","todos","reducers","addTodo","state","action","id","Date","now","completed","text","payload","removeTodo","filter","todo","toggleTodo","map","actions","store","configureStore","reducer","todosReducer","selectTodos","Todo","dispatch","useDispatch","labelClassName","removeBtnClassName","className","onChange","type","htmlFor","onClick","ListTodos","useSelector","Form","useState","value","setValue","createBtnClassName","onSubmit","e","preventDefault","alert","currentTarget","placeholder","autoFocus","onKeyDown","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAgBaA,EAAaC,YAAY,CACpCC,KAAM,QACNC,aANqC,CACrCC,MAAO,IAMPC,SAAU,CACRC,QAAS,SAACC,EAAOC,GACfD,EAAMH,MAAN,sBACKG,EAAMH,OADX,CAEE,CACEK,GAAIC,KAAKC,MACTC,WAAW,EACXC,KAAML,EAAOM,YAInBC,WAAY,SAACR,EAAOC,GAClBD,EAAMH,MAAQG,EAAMH,MAAMY,QAAO,SAACC,GAAD,OAAUA,EAAKR,KAAOD,EAAOM,YAEhEI,WAAY,SAACX,EAAOC,GAClBD,EAAMH,MAAQG,EAAMH,MAAMe,KAAI,SAACF,GAC7B,OAAIA,EAAKR,KAAOD,EAAOM,QAAgBG,EAChC,2BACFA,GADL,IAEEL,WAAYK,EAAKL,mBAQpB,EAA4CZ,EAAWoB,QAA/Cd,EAAR,EAAQA,QAASS,EAAjB,EAAiBA,WAAYG,EAA7B,EAA6BA,WAErBlB,IAAf,QC7CaqB,EAAQC,YAAe,CAClCC,QAAS,CACPnB,MAAOoB,KAOEC,EAAc,SAAClB,GAAD,OAAsBA,EAAMH,MAAMA,O,qBCgC9CsB,EAtCF,SAACT,GACZ,IAAMU,EAAWC,cAUXC,EAAc,sBAAkBZ,EAAKL,UAAY,mBAAqB,IAEtEkB,EAAkB,cAAUb,EAAKL,UAAY,cAAgB,+BAEnE,OACE,qBAAImB,UAAU,OAAd,UACE,sBAAKA,UAAU,cAAcC,SAVR,WACvBL,EAAST,EAAWD,EAAKR,MASvB,UACE,uBACEsB,UAAU,cACVE,KAAK,WACLxB,GAAIQ,EAAKJ,OAEX,uBAAOkB,UAAWF,EAAgBK,QAASjB,EAAKJ,KAAhD,SACGI,EAAKJ,UAGV,wBACEoB,KAAK,SACLF,UAAWD,EACXK,QA3BmB,WACvBR,EAASZ,EAAWE,EAAKR,MAuBvB,wBCbS2B,G,MAbG,WAChB,IAAMhC,EAAQiC,YAAYZ,GAE1B,OACE,qBAAIM,UAAU,QAAd,UACE,oBAAIA,UAAU,cAAd,2BACC3B,EAAMe,KAAI,SAACF,GACV,OAAO,cAAC,EAAD,eAAwBA,GAAbA,EAAKR,Y,QCoChB6B,G,MA7CF,WACX,IAAMX,EAAWC,cACjB,EAA0BW,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAkB,cAAoB,KAAVF,EAAe,eAAiB,gCAiBlE,OACE,uBAAMT,UAAU,OAAOY,SAhBJ,SAACC,GACpBA,EAAEC,iBACQ,KAAVL,EAAeb,EAASrB,EAAQkC,IAAUM,MAAM,kBAChDL,EAAS,KAaT,UACM,oBAAIV,UAAU,cAAd,gDACA,sBAAKA,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,4BACA,sBAAKA,UAAU,kBAAf,UACE,uBACEE,KAAK,OACLF,UAAU,2BACV7B,KAAK,OACLsC,MAAOA,EACPR,SAfO,SAACY,GACpBH,EAASG,EAAEG,cAAcP,QAebQ,YAAY,iBACZC,WAAS,IAEX,wBAAQhB,KAAK,SAASF,UAAWW,EAAoBQ,UAxB3C,SAACN,GACR,UAAVA,EAAEO,KAAiBxB,EAASrB,EAAQkC,IACvCC,EAAS,KAsBC,+BCtBCW,MAdf,WAEE,OACE,qCACE,wBAAQrB,UAAU,WAClB,uBAAMA,UAAU,OAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,wBAAQA,UAAU,eCRxBsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUlC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJmC,SAASC,eAAe,W","file":"static/js/main.db3f9d0a.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface ITodo {\n  id: number;\n  completed: boolean;\n  text: string;\n}\n\nexport interface ITodosSliceState {\n  todos: ITodo[];\n}\n\nconst initialState: ITodosSliceState = {\n  todos: [],\n};\n\nexport const todosSlice = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    addTodo: (state, action: PayloadAction<string>) => {\n      state.todos = [\n        ...state.todos,\n        {\n          id: Date.now(),\n          completed: false,\n          text: action.payload,\n        },\n      ];\n    },\n    removeTodo: (state, action: PayloadAction<number>) => {\n      state.todos = state.todos.filter((todo) => todo.id !== action.payload);\n    },\n    toggleTodo: (state, action: PayloadAction<number>) => {\n      state.todos = state.todos.map((todo) => {\n        if (todo.id !== action.payload) return todo;\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      });\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addTodo, removeTodo, toggleTodo } = todosSlice.actions;\n\nexport default todosSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport todosReducer from \"./todosSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    todos: todosReducer,\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport const selectTodos = (state: RootState) => state.todos.todos;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { removeTodo, toggleTodo } from \"../../todosSlice\";\nimport { ITodo } from \"../../todosSlice\";\nimport \"./Todo.css\";\n\nconst Todo = (todo: ITodo) => {\n  const dispatch = useDispatch();\n\n  const handleRemoveTodo = () => {\n    dispatch(removeTodo(todo.id));\n  };\n\n  const handleToggleTodo = () => {\n    dispatch(toggleTodo(todo.id));\n  }\n\n  const labelClassName = `todo__label ${todo.completed ? \"todo__label_done\" : \"\"}`;\n\n  const removeBtnClassName = `btn ${todo.completed ? \" btn-danger\" : \"btn-outline-danger disabled\"}`;\n\n  return (\n    <li className=\"todo\">\n      <div className=\"todo__check\" onChange={handleToggleTodo}>\n        <input\n          className=\"todo__input\"\n          type=\"checkbox\"\n          id={todo.text}\n        />\n        <label className={labelClassName} htmlFor={todo.text}>\n          {todo.text}\n        </label>\n      </div>\n      <button\n        type=\"button\"\n        className={removeBtnClassName}\n        onClick={handleRemoveTodo}\n      >\n        Remove\n      </button>\n    </li>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ITodo } from \"../../todosSlice\";\nimport Todo from \"../Todo/Todo\";\nimport { selectTodos } from \"../../store\";\nimport \"./ListTodos.css\";\n\nconst ListTodos = () => {\n  const todos = useSelector(selectTodos);\n\n  return (\n    <ul className=\"todos\">\n      <h3 className=\"form__title\">List of Todos</h3>\n      {todos.map((todo: ITodo) => {\n        return <Todo key={todo.id} {...todo}></Todo>;\n      })}\n    </ul>\n  );\n};\n\nexport default ListTodos;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../../todosSlice\";\nimport \"./Form.css\";\n\nconst Form = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n\n  const createBtnClassName = `btn ${value !== \"\" ? \" btn-primary\" : \"btn-outline-primary disabled\"}`;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    value !== \"\" ? dispatch(addTodo(value)) : alert(\"Enter the task\");\n    setValue(\"\");\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\n    if(e.key === \"Enter\") dispatch(addTodo(value));\n    setValue(\"\");\n  };\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    setValue(e.currentTarget.value);\n  };\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n          <h2 className=\"form__title\">ToDo application (React+Rredux+TS)</h2>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Enter new todo</label>\n            <div className=\"form__container\">\n              <input\n                type=\"text\"\n                className=\"form-control form__input\"\n                name=\"todo\"\n                value={value}\n                onChange={handleChange}\n                placeholder=\"Enter new todo\"\n                autoFocus\n              />\n              <button type=\"submit\" className={createBtnClassName} onKeyDown={handleKeyDown}>\n                Create\n              </button>\n            </div>\n          </div>\n        </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport \"./App.css\";\nimport ListTodos from \"./components/ListTodos/ListTodos\";\nimport Form from \"./components/Form/Form\";\n\nfunction App() {\n\n  return (\n    <>\n      <header className=\"header\"></header>\n      <main className=\"main\">\n        <Form />\n        <ListTodos />\n      </main>\n      <footer className=\"footer\"></footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}